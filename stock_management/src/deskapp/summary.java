/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package deskapp;

import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.print.PageFormat;
import java.awt.print.Printable;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author SHIVAANSH
 */
public class summary extends javax.swing.JFrame  {

    /**
     * Creates new form summary
     */
    public summary() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        stable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        billnum = new javax.swing.JTextField();
        custname = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        dc1 = new com.toedter.calendar.JDateChooser();
        dc2 = new com.toedter.calendar.JDateChooser();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        fetch = new javax.swing.JButton();
        date = new javax.swing.JButton();
        r1 = new javax.swing.JRadioButton();
        r2 = new javax.swing.JRadioButton();
        ps = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        bill = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("summary");
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        stable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "billno", "product", "category/subcat", "quantity", "price", "bill date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        stable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                stableMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(stable);
        if (stable.getColumnModel().getColumnCount() > 0) {
            stable.getColumnModel().getColumn(0).setResizable(false);
            stable.getColumnModel().getColumn(1).setResizable(false);
            stable.getColumnModel().getColumn(2).setResizable(false);
            stable.getColumnModel().getColumn(3).setResizable(false);
            stable.getColumnModel().getColumn(4).setResizable(false);
            stable.getColumnModel().getColumn(5).setResizable(false);
        }

        jLabel1.setText("bill no.");

        billnum.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                billnumFocusGained(evt);
            }
        });
        billnum.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                billnumMouseClicked(evt);
            }
        });
        billnum.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                billnumKeyTyped(evt);
            }
        });

        custname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                custnameKeyTyped(evt);
            }
        });

        jLabel2.setText("customer /dealer name");

        dc1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                dc1MousePressed(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dc1MouseClicked(evt);
            }
        });

        dc2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dc2MouseClicked(evt);
            }
        });

        jLabel3.setText("from");

        jLabel4.setText("to");

        fetch.setText("fetch data");
        fetch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fetchActionPerformed(evt);
            }
        });

        date.setText("choose bill date");
        date.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateActionPerformed(evt);
            }
        });

        buttonGroup1.add(r1);
        r1.setText("choose credentials");
        r1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                r1MousePressed(evt);
            }
        });
        r1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r1ActionPerformed(evt);
            }
        });

        buttonGroup1.add(r2);
        r2.setText("choose date instead");
        r2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r2ActionPerformed(evt);
            }
        });

        ps.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jButton1.setText("clear data");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jButton2.setText("print report");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel5.setText("bill");

        jButton3.setText("purchase/sale");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel6.setText("deal type");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(r2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel3))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(r1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                                .addComponent(jLabel1)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(dc1, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(77, 77, 77)
                                .addComponent(jLabel4))
                            .addComponent(billnum, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(dc2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(custname, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(27, 27, 27)
                                .addComponent(fetch))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(72, 72, 72)
                                .addComponent(date)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 135, Short.MAX_VALUE)
                                .addComponent(jButton1)))
                        .addGap(79, 79, 79))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ps, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 902, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel5)
                                        .addGap(18, 18, 18)
                                        .addComponent(bill, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(98, 98, 98)
                                        .addComponent(jButton3)))))
                        .addGap(52, 52, 52))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(billnum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(custname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(fetch)
                            .addComponent(r1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 86, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(dc1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(dc2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(date)
                                    .addComponent(jButton1)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addComponent(r2)))
                        .addGap(18, 18, 18)
                        .addComponent(ps, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel6)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 337, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton3))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(bill, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fetchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fetchActionPerformed
        // TODO add your handling code here:
        if(billnum.getText().length()!=0){
                String path="jdbc:mysql://localhost/";
                String place="shivam";
                String user="root";
                String password="";
                try{
                    Connection conn=(Connection)DriverManager.getConnection(path+place, user, password);
                    String qy="select * from summary where billno=?";
                    String qy2="select * from dealinfo where billno=?";
                    try{
                        if(billnum.getText().length()!=0){
                        PreparedStatement st1=(PreparedStatement)conn.prepareStatement(qy);
                        st1.setString(1,billnum.getText());
                        ResultSet rst=st1.executeQuery();
                        DefaultTableModel mymodel= (DefaultTableModel)stable.getModel();
                        rst.next();
                        do{
                            String billno=rst.getString("billno");
                            String product=rst.getString("product");
                            String catsub=rst.getString("catsub");
                            String qty=rst.getString("qty");
                            String price=rst.getString("price");
                            String dealdate=rst.getString("dealdate");
                            Object rowdata[]={billno,product,catsub,qty,price,dealdate};
                        mymodel.addRow(rowdata);
                        }
                        while(rst.next());
                        }
                        
                    }
                    catch(Exception e){
                        JOptionPane.showMessageDialog(rootPane,"cant fetch data "+e);
                    }
                    try{
                        PreparedStatement st2=(PreparedStatement)conn.prepareStatement(qy2);
                        st2.setString(1,billnum.getText());
                        ResultSet rst2=st2.executeQuery();
                        if(rst2.next()){
                        ps.setText(rst2.getString("ps"));
                        custname.setText(rst2.getString("custname"));
                        dc1.setDate(rst2.getDate("dealdate"));
                        dc2.setDate(rst2.getDate("dealdate"));
                        bill.setText(rst2.getString("bill"));
                    }
                    }
                    catch(Exception e){
                        JOptionPane.showMessageDialog(rootPane,"cant fetch data "+e);
                    }
                }
                catch(Exception e){
                    JOptionPane.showMessageDialog(rootPane,"connectivity error "+e);
                }
        }
        else if(custname.getText().length()!=0){
            String path="jdbc:mysql://localhost/";
                String place="shivam";
                String user="root";
                String password="";
                try{
                    Connection conn=(Connection)DriverManager.getConnection(path+place, user, password);
                    String qy="select * from summary where custname=?";
                    String qy2="select * from dealinfo where custname=?";
                    try{
                        
                        PreparedStatement st1=(PreparedStatement)conn.prepareStatement(qy);
                        st1.setString(1,custname.getText());
                        ResultSet rst=st1.executeQuery();
                        DefaultTableModel mymodel= (DefaultTableModel)stable.getModel();
                        rst.next();
                        do{
                            String billno=rst.getString("billno");
                            String product=rst.getString("product");
                            String catsub=rst.getString("catsub");
                            String qty=rst.getString("qty");
                            String price=rst.getString("price");
                            String dealdate=rst.getString("dealdate");
                            Object rowdata[]={billno,product,catsub,qty,price,dealdate};
                        mymodel.addRow(rowdata);
                        }
                        while(rst.next());
                        
                        
                    }
                    catch(Exception e){
                        JOptionPane.showMessageDialog(rootPane,"cant fetch data "+e);
                    }
                    try{
                        PreparedStatement st2=(PreparedStatement)conn.prepareStatement(qy2);
                        st2.setString(1,custname.getText());
                        ResultSet rst2=st2.executeQuery();
                        if(rst2.next()){
                        ps.setText(rst2.getString("ps"));
                        billnum.setText(rst2.getString("billno"));
                        dc1.setDate(rst2.getDate("dealdate"));
                        dc2.setDate(rst2.getDate("dealdate"));
                        bill.setText(rst2.getString("bill"));
                    }
                    }
                    catch(Exception e){
                        JOptionPane.showMessageDialog(rootPane,"cant fetch data "+e);
                    }
                }
                catch(Exception e){
                    JOptionPane.showMessageDialog(rootPane,"connectivity error "+e);
                }
        }
    
    }//GEN-LAST:event_fetchActionPerformed
    
    private void billnumFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_billnumFocusGained
        // TODO add your handling code here:
        
    }//GEN-LAST:event_billnumFocusGained

    private void billnumMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_billnumMouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_billnumMouseClicked

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_formMouseClicked

    private void billnumKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_billnumKeyTyped
        // TODO add your handling code here:
        custname.setEditable(false);
        dc1.setEnabled(false);
        dc2.setEnabled(false);
    }//GEN-LAST:event_billnumKeyTyped

    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
        // TODO add your handling code here:
        billnum.setEditable(true);
        custname.setEditable(true);
        dc1.setEnabled(false);
        dc2.setEnabled(false);
        billnum.setText("");
        custname.setText("");
        dc1.setCalendar(null);
        dc2.setCalendar(null);
    }//GEN-LAST:event_formMousePressed

    private void custnameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_custnameKeyTyped
        // TODO add your handling code here:
        billnum.setEditable(false);
        dc1.setEnabled(false);
        dc2.setEnabled(false);
    }//GEN-LAST:event_custnameKeyTyped

    private void dc1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dc1MouseClicked
        // TODO add your handling code here:
        
        
    }//GEN-LAST:event_dc1MouseClicked

    private void dc2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dc2MouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_dc2MouseClicked

    private void dc1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dc1MousePressed
        // TODO add your handling code here:
       
    }//GEN-LAST:event_dc1MousePressed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        billnum.setEnabled(false);
        custname.setEnabled(false);
        fetch.setEnabled(false);
        dc1.setEnabled(false);
        dc2.setEnabled(false);
        date.setEnabled(false);
        
    }//GEN-LAST:event_formWindowOpened

    private void r1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_r1MousePressed
        // TODO add your handling code here:
        custname.setEnabled(true);
            billnum.setEnabled(true);
            dc1.setEnabled(false);
            dc2.setEnabled(false);
            fetch.setEnabled(true);
            date.setEnabled(false);
    }//GEN-LAST:event_r1MousePressed

    private void r2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r2ActionPerformed
        // TODO add your handling code here:
        dc1.setEnabled(true);
            dc2.setEnabled(true);
            date.setEnabled(true);
            custname.setEnabled(false);
            billnum.setEnabled(false);
            fetch.setEnabled(false);
    }//GEN-LAST:event_r2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        buttonGroup1.clearSelection();
        custname.setText("");
        custname.setEditable(false);
        billnum.setText("");
        billnum.setEditable(false);
        dc1.setCalendar(null);
        dc1.setEnabled(false);
        dc2.setCalendar(null);
        dc2.setEnabled(false);
        DefaultTableModel mymodel= (DefaultTableModel)stable.getModel();
        mymodel.setRowCount(0);
        ps.setText("");
        bill.setText("");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void dateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateActionPerformed
        // TODO add your handling code here:
        String path="jdbc:mysql://localhost/";
                String place="shivam";
                String user="root";
                String password="";
                try{
                    Connection conn=(Connection)DriverManager.getConnection(path+place, user, password);
                    String qy="select * from summary where dealdate between ? and ?";
//                    String qy2="select * from dealinfo where dealdate between ? and ?";
                    try{
                        
                        PreparedStatement st1=(PreparedStatement)conn.prepareStatement(qy);
                        SimpleDateFormat myformat=new SimpleDateFormat("yyyy-MM-dd");
                                String date1=myformat.format(dc1.getDate());
                                st1.setString(1, date1);
                        
                                String date2=myformat.format(dc2.getDate());
                                st1.setString(2, date2);        
                        ResultSet rst=st1.executeQuery();
                        DefaultTableModel mymodel= (DefaultTableModel)stable.getModel();
                        rst.next();
                        do{
                            String billno=rst.getString("billno");
                            String product=rst.getString("product");
                            String catsub=rst.getString("catsub");
                            String qty=rst.getString("qty");
                            String price=rst.getString("price");
                            String dealdate=rst.getString("dealdate");
                            Object rowdata[]={billno,product,catsub,qty,price,dealdate};
                        mymodel.addRow(rowdata);
                        }
                        while(rst.next());
                        
                        
                    }
                    catch(Exception e){
                        JOptionPane.showMessageDialog(rootPane,"cant fetch data "+e);
                    }
                }
                catch(Exception e){
                        JOptionPane.showMessageDialog(rootPane,"connectivity error"+e);
                }
    }//GEN-LAST:event_dateActionPerformed

    private void stableMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stableMousePressed
        // TODO add your handling code here:
//         DefaultTableModel mymodel= (DefaultTableModel)table.getModel();
//                        
        String path="jdbc:mysql://localhost/";
                String place="shivam";
                String user="root";
                String password="";
                try{
                    Connection conn=(Connection)DriverManager.getConnection(path+place, user, password);
                    String qy="select * from summary where billno=?";
                    String qy2="select * from dealinfo where billno=?";
                    try{
                        
                        PreparedStatement st1=(PreparedStatement)conn.prepareStatement(qy);
                        st1.setString(1,stable.getValueAt(stable.getSelectedRow(),0).toString());
                        ResultSet rst=st1.executeQuery();
                        DefaultTableModel mymodel= (DefaultTableModel)stable.getModel();
                       
                        rst.next();
                        billnum.setText(rst.getString("billno"));
                        custname.setText(rst.getString("custname"));
                        dc1.setDate(rst.getDate("dealdate"));
                        dc2.setDate(rst.getDate("dealdate"));
                        mymodel.setRowCount(0);
                        do{
                            
                            String billno=rst.getString("billno");
                            String product=rst.getString("product");
                            String catsub=rst.getString("catsub");
                            String qty=rst.getString("qty");
                            String price=rst.getString("price");
                            String dealdate=rst.getString("dealdate");
                            Object rowdata[]={billno,product,catsub,qty,price,dealdate};
                        mymodel.addRow(rowdata);
                        }
                        while(rst.next());
                        PreparedStatement st2=(PreparedStatement)conn.prepareStatement(qy2);
                        st2.setString(1,billnum.getText());
                        ResultSet rst2=st2.executeQuery();
                        
                        if(rst2.next()){
                            bill.setText(rst2.getString("bill"));
                        }
                        
                        
                    }
                    catch(Exception e){
                        JOptionPane.showMessageDialog(rootPane,"cant fetch data "+e);
                    }
                }
                catch(Exception e){
                        JOptionPane.showMessageDialog(rootPane,"connectivity error"+e);
                }
    }//GEN-LAST:event_stableMousePressed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        if(billnum.getText().length()!=0 && custname.getText().length()!=0 && dc1.getDate()!=null & dc2.getDate()!=null && bill.getText().length()!=0 ){
            print p=new print();
            p.setVisible(true);
            p.name.setText(this.custname.getText());
            p.billno.setText(this.billnum.getText());
            p.date.setText(this.dc1.getDate().toString());
            p.tbill.setText(this.bill.getText());
            p.type.setText(this.ps.getText());
            int row=this.stable.getRowCount();
            int i=0;
            DefaultTableModel mymodel= (DefaultTableModel)p.ptable.getModel();
            
            do{
                String product =this.stable.getValueAt(i,1).toString();
                String catsub =this.stable.getValueAt(i,2).toString();
                String qty=this.stable.getValueAt(i,3).toString();
                String price=this.stable.getValueAt(i,4).toString();
                Object rowdata[]={product,catsub,qty,price};
                mymodel.addRow(rowdata);
                i++;
            }
            while(i<row);
            
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void r1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_r1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        this.dispose();
        buysell b=new buysell();
        b.setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(summary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(summary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(summary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(summary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new summary().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JTextField bill;
    public javax.swing.JTextField billnum;
    private javax.swing.ButtonGroup buttonGroup1;
    public javax.swing.JTextField custname;
    private javax.swing.JButton date;
    public com.toedter.calendar.JDateChooser dc1;
    public com.toedter.calendar.JDateChooser dc2;
    private javax.swing.JButton fetch;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JLabel ps;
    private javax.swing.JRadioButton r1;
    private javax.swing.JRadioButton r2;
    public javax.swing.JTable stable;
    // End of variables declaration//GEN-END:variables

    
}
