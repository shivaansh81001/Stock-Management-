/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package deskapp;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author SHIVAANSH
 */
public class buysell extends javax.swing.JFrame {

    /**
     * Creates new form buysell
     */
    public buysell() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        r1 = new javax.swing.JRadioButton();
        r2 = new javax.swing.JRadioButton();
        dealdate = new com.toedter.calendar.JDateChooser();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        cbd = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        custname = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        cb1 = new javax.swing.JComboBox<>();
        cb2 = new javax.swing.JComboBox<>();
        cb3 = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        qty = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        catname = new javax.swing.JLabel();
        subname = new javax.swing.JLabel();
        pname = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        purchase = new javax.swing.JButton();
        sell = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        bill = new javax.swing.JTextField();
        clear = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        tax = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        tbill = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        billno = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setLocation(new java.awt.Point(200, 100));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Arial Narrow", 1, 48)); // NOI18N
        jLabel1.setText("buy/sell products");

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        buttonGroup1.add(r1);
        r1.setText("cutomer");
        r1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                r1MousePressed(evt);
            }
        });
        r1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r1ActionPerformed(evt);
            }
        });

        buttonGroup1.add(r2);
        r2.setText("dealer");
        r2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                r2MousePressed(evt);
            }
        });
        r2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r2ActionPerformed(evt);
            }
        });

        jLabel9.setText("date of purchase");

        jLabel10.setText("buyer/seller");

        jLabel7.setText("dealer");

        cbd.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--choose dealer--" }));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel8.setText("dealer info");

        jLabel12.setText("customer name");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(dealdate, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(0, 7, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel7))
                                .addGap(97, 97, 97))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(custname)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(r1)
                                .addGap(62, 62, 62)
                                .addComponent(r2))
                            .addComponent(cbd, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(69, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(150, 150, 150)
                .addComponent(jLabel8)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(jLabel8)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel10)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(r1)
                                .addComponent(r2)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addGap(21, 21, 21)
                        .addComponent(custname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel12))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(dealdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(62, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel2.setText("category name/id");

        jLabel3.setText("sub-category name/id ");

        jLabel4.setText("product id");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel5.setText("product detail");

        cb1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--choose category--" }));
        cb1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cb1ItemStateChanged(evt);
            }
        });

        cb2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--choose sub-cat--" }));
        cb2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cb2ItemStateChanged(evt);
            }
        });
        cb2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb2ActionPerformed(evt);
            }
        });

        cb3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--choose product--" }));

        jLabel6.setText("quantity");

        jButton1.setText("add");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel4)
                            .addComponent(jLabel6))
                        .addGap(34, 34, 34)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(cb1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cb2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cb3, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(qty)))))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(catname, javax.swing.GroupLayout.DEFAULT_SIZE, 59, Short.MAX_VALUE)
                    .addComponent(subname, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pname, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel5)
                .addGap(34, 34, 34)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cb1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(catname, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cb2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(subname, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cb3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pname, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(qty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
        );

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "product ", "category/subcat", "quantity ", "price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(table);
        if (table.getColumnModel().getColumnCount() > 0) {
            table.getColumnModel().getColumn(0).setResizable(false);
            table.getColumnModel().getColumn(1).setResizable(false);
            table.getColumnModel().getColumn(2).setResizable(false);
            table.getColumnModel().getColumn(3).setResizable(false);
        }

        purchase.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        purchase.setText("purchase");
        purchase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                purchaseActionPerformed(evt);
            }
        });

        sell.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        sell.setText("sell");
        sell.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sellActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel11.setText("Bill");

        jLabel13.setText("Bill");

        clear.setText("clear");
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });

        jButton4.setText("remove");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jButton2.setText("calculate");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel14.setText("tax(12%)");

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel15.setText("total bill");

        tbill.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        jLabel16.setText("bill no.");

        jButton3.setText("generate");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton5.setText("summary");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("clear table");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bill, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tax, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tbill, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addComponent(purchase, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addComponent(sell, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(431, 431, 431)
                                .addComponent(jLabel1))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(clear, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(451, 451, 451)
                                .addComponent(jLabel11))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(82, 82, 82)
                                .addComponent(jLabel16))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(66, 66, 66)
                                .addComponent(jButton3))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(32, 32, 32)
                                .addComponent(billno, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton4)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton6)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(82, 82, 82)
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(billno, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel11)
                                .addGap(13, 13, 13))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(clear)
                                .addGap(37, 37, 37)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jButton4)
                                .addGap(18, 18, 18)
                                .addComponent(jButton6)
                                .addGap(179, 179, 179)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                                .addComponent(sell, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE)
                                .addComponent(purchase, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel13)
                                .addComponent(bill, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel14)
                                .addComponent(tax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel15)
                                .addComponent(tbill, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        custname.setEnabled(false);
        cbd.setEnabled(false);
        bill.setEditable(false);
        tax.setEditable(false);
        tbill.setEditable(false);
        String path="jdbc:mysql://localhost/";
        String place="shivam";
        String user="root";
        String password="";
        try{
            Connection conn =(Connection)DriverManager.getConnection(path +place,user,password);
            String qy1 ="select distinct catname,catid from category order by catname";
            
            try{
                PreparedStatement st=(PreparedStatement)conn.prepareStatement(qy1);
                ResultSet rst=st.executeQuery();
                rst.next();
                do{
                   String catname= rst.getString("catname");
                    String catid=rst.getString("catid");
                    cb1.addItem(catname+","+catid);
                }
                while(rst.next());
            }
            catch(Exception e){
                JOptionPane.showMessageDialog(rootPane,"cant fetch data"+e);
            }
        }       
        catch(Exception e){
            JOptionPane.showMessageDialog(rootPane,"connectivity error");
        }
        
        try{
            Connection conn=(Connection)DriverManager.getConnection(path+place,user,password);
            String qy1="select * from product order by pname asc";
            
            try{
                PreparedStatement st=(PreparedStatement)conn.prepareStatement(qy1);
                ResultSet rst=st.executeQuery();
////                DefaultTableModel mymodel= (DefaultTableModel)table.getModel();
////                mymodel.setRowCount(0);
//                if(rst.next()){
//                    do{
//                       
//                       String pname=rst.getString("pname");
//                       
//                       
//                       Object rowdata[]={pname};
//                       mymodel.addRow(rowdata);
//                    }
//                    while(rst.next());
//                }
//                else{
//                    JOptionPane.showMessageDialog(rootPane,"no more data");
//                }
            }
            catch(Exception e){
                JOptionPane.showMessageDialog(rootPane,"cant fetch data"+e);
            }
            //dealer
       
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(rootPane,"connectivity error"+e);
        }
         try{
            Connection conn=(Connection)DriverManager.getConnection(path+place,user,password);
            String qy1="select dealer from dealer";
            try{   
                PreparedStatement st=(PreparedStatement)conn.prepareStatement(qy1);
                ResultSet rst=st.executeQuery();
                rst.next();
                do{
                   cbd.addItem(rst.getString("dealer"));    
                }
                while(rst.next());
            }
            catch(Exception e){
                 JOptionPane.showMessageDialog(rootPane,"cant fetch data "+e);
            }
            }
        catch(Exception e){
                JOptionPane.showMessageDialog(rootPane,"connectivity error");
         }
       dealer d=new dealer();
       if(d.t1.getText().toString().length()!=0){
//            String dname=d.t1.getText();
            cbd.setSelectedItem(d.t1.getText());
       }
       else
           cbd.setSelectedIndex(0);
       
    }//GEN-LAST:event_formWindowOpened

    private void cb1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cb1ItemStateChanged
        // TODO add your handling code here:
//        if(cb1.getSelectedItem()!="--choose category--"){
//            int j=1;
            cb2.setEnabled(true);
             String path="jdbc:mysql://localhost/";
                String place="shivam";
                String user="root";
                String password="";
                String catname=cb1.getSelectedItem().toString();
                int comma =catname.indexOf(",");
                int l=catname.length();
                String catid=catname.substring(comma+1,l);
//                System.out.print(catid);
                try{
                    Connection conn =(Connection)DriverManager.getConnection(path +place,user,password);
                    String qy1 ="select distinct subname,subid from subcat where catid=? order by subname";
                    
                    
//                        Statement st2=conn.createStatement();
//                        String qy2="select count(subid) from subcat";
//                        ResultSet rst2=st2.executeQuery(qy2);
//                        rst2.next();
//                        int i=rst2.getInt(1);
//                        System.out.print(i);

                    
                    try{
                        PreparedStatement st=(PreparedStatement)conn.prepareStatement(qy1);
                        
                            st.setString(1,catid);
                            ResultSet rst=st.executeQuery();
                            rst.next();
                        do{
                            String subname=rst.getString("subname");
                            String subid=rst.getString("subid");
                            cb2.addItem(subname+","+subid);
//                            j++;
                        }
                        while(rst.next());
                        
                    }
                    catch(Exception e){
                        JOptionPane.showMessageDialog(rootPane,"cant fetch data"+e);
                    }
                    
                }
                catch(Exception e){
                    JOptionPane.showMessageDialog(rootPane,"connectivity error"+e);
                }
//        }
//        else
//        {cb2.setEnabled(false);
//                }
    }//GEN-LAST:event_cb1ItemStateChanged

    private void cb2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cb2ActionPerformed

    private void r1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_r1MousePressed
        // TODO add your handling code here:
        custname.setEnabled(true);
        cbd.setEnabled(false);
        purchase.setEnabled(false);
        purchase.setVisible(false);
    }//GEN-LAST:event_r1MousePressed

    private void r2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_r2MousePressed
        // TODO add your handling code here:
        cbd.setEnabled(true);
        custname.setEnabled(false);
        purchase.setEnabled(true);
        purchase.setVisible(true);
    }//GEN-LAST:event_r2MousePressed

    private void purchaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_purchaseActionPerformed
        
        if(billno.getText().length()!=0 && cbd.getSelectedIndex()!=0 && dealdate.getDate()!=null && cb1.getSelectedIndex()!=0 && cb2.getSelectedIndex()!=0 && cb3.getSelectedIndex()!=0 && tbill.getText().length()!=0 && table.getRowCount()!=0){
                String path="jdbc:mysql://localhost/";
                String place="shivam";
                String user="root";
                String password="";
                //info{
                try{
                    Connection conn =(Connection)DriverManager.getConnection(path +place,user,password);
                    String qy1 ="insert into dealinfo(type,custname,dealdate,bill,ps,billno) values(?,?,?,?,?,?)";
                    String qy2="select balance from balance";
                    String qy3="update balance set balance=?";
                    String qy4="select quantity from product where pname=?";
                    String qy5="update product set quantity=?";
                    try{
                        PreparedStatement st=(PreparedStatement)conn.prepareStatement(qy1);
                            
                                if(r1.isSelected()){
                                    String type=r1.getText();
                                    st.setString(1,type);
                                    String name=custname.getText();
                                    st.setString(2,name);
                                }
                                else if(r2.isSelected()){
                                    st.setString(1,r2.getText());
                                    st.setString(2,cbd.getSelectedItem().toString());
                                }
                                SimpleDateFormat sdf=new SimpleDateFormat("yyyy-MM-dd");
                                String date=sdf.format(dealdate.getDate());
                                st.setString(3, date);
//                                System.out.println("hello3");
                                st.setString(4,tbill.getText()); 
//                                System.out.println("hello4");
                                st.setString(5,"purchase");
//                                System.out.print("hello5");
                                   st.setString(6,billno.getText());
                                int rowcount=st.executeUpdate();
                                if(rowcount==1){
                                JOptionPane.showMessageDialog(rootPane,"deal info updated");
                                }
                    }
                    catch(SQLException e){
                        JOptionPane.showMessageDialog(rootPane,"cant upload data"+e);
                    }
                    try{
                        PreparedStatement st2=(PreparedStatement)conn.prepareStatement(qy2);
                        ResultSet rst=st2.executeQuery();
                        if(rst.next()){
                            int bal=rst.getInt("balance");
                            float amt=Float.parseFloat(tbill.getText());
                            float res=bal-amt;
                        PreparedStatement st3=(PreparedStatement)conn.prepareStatement(qy3);
                        
                        st3.setString(1,String.valueOf(res));
                        int rowcount=st3.executeUpdate();
                        if(rowcount ==1){
                            JOptionPane.showMessageDialog(rootPane,"balance updated");
                        }
                        }
                    }
                    catch(Exception e){
                        JOptionPane.showMessageDialog(rootPane,"error in updating balance"+e);
                    }
//                    try{
//                        PreparedStatement st4=(PreparedStatement)conn.prepareStatement(qy4);
//                        if(cb3.getSelectedIndex()!=0){
////                            int comma=cb3.getSelectedItem().toString().indexOf(",");
////                            String pid=cb3.getSelectedItem().toString().substring(comma+1,cb3.getSelectedItem().toString().length());
//                        int i;
//                        for(i=0;i<=table.getRowCount();i++){
//                            String pname=table.getValueAt(i,0).toString();
//                            st4.setString(1,pname);
//                            ResultSet rst4=st4.executeQuery();
//                            rst4.next();
//                            do{
//                                int qty1=rst4.getInt("quantity");
//                            
//    //                            for(int i=0;i<=table.getRowCount();i++){
//                                    int qty2=Integer.parseInt(table.getValueAt(i,2).toString());
//                                    int resq=qty1+qty2;
//                                    PreparedStatement st5=(PreparedStatement)conn.prepareStatement(qy5);
//                                    st5.setString(1,String.valueOf(resq));
//                                    int rowcount=st5.executeUpdate();
//                                    if (rowcount==1){
//                                        System.out.print("qty updated");
//                                }
//                            }
//                            while(rst4.next());
//                            
//                        }
//                        
//                        }
//                        
//                    }
//                    catch(Exception e){
//                        JOptionPane.showMessageDialog(rootPane,"product selection error"+e);
//                    }
                }
                catch(Exception e){
                    JOptionPane.showMessageDialog(rootPane,"connectivity error"+e);
                }
                //
                try{
                    Connection conn=(Connection)DriverManager.getConnection(path+place,user,password);
                    String qy="insert into summary values(?,?,?,?,?,?,?)";
                    try{
                        PreparedStatement st=(PreparedStatement)conn.prepareStatement(qy);
                        int rows=table.getRowCount();
                        int i=0;
                        do{
                            st.setString(1,billno.getText());
                            System.out.println("1");
                            if(r1.isSelected()){
                                st.setString(2,custname.getText());
                            }
                            else if(r2.isSelected()){
                                st.setString(2,cbd.getSelectedItem().toString());
                            }
                            System.out.println("2");
                            st.setString(3,table.getValueAt(i,0).toString());
                            System.out.println("3");
                            st.setString(4,table.getValueAt(i,1).toString());
                            System.out.println("4");
                            st.setString(5,table.getValueAt(i,2).toString());
                            System.out.println("5");
                            st.setString(6,table.getValueAt(i,3).toString());
                            System.out.println("6");
                            SimpleDateFormat sdf=new SimpleDateFormat("yyyy-MM-dd");
                                String date=sdf.format(dealdate.getDate());
                            st.setString(7,date);
                            System.out.println("7");
                            int rowcount = st.executeUpdate();
                            if(rowcount ==1){
                                
                                i++;
                            }
                        }
                        while(i<rows);
                        
                    }
                    catch(Exception e){
                        JOptionPane.showMessageDialog(rootPane,"cant fetch data(summary)"+e);
                    }
                }
                catch(Exception e){
                    JOptionPane.showMessageDialog(rootPane,"connectivity error(summary)"+e);
                
                }
                }
                else
                {
                     JOptionPane.showMessageDialog(rootPane,"please fill all the information ");
                }
    }//GEN-LAST:event_purchaseActionPerformed

    private void cb2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cb2ItemStateChanged
        // TODO add your handling code here:
//        if(cb2.getSelectedItem()!="--choose category--"){
            
            
             String path="jdbc:mysql://localhost/";
                String place="shivam";
                String user="root";
                String password="";
                String catname=cb2.getSelectedItem().toString();
                int comma =catname.indexOf(",");
                int l=catname.length();
                String subid=catname.substring(comma+1,l);
//                System.out.print(subid);
                try{
                    Connection conn =(Connection)DriverManager.getConnection(path +place,user,password);
                    String qy1 ="select pname,pid from product where subid=?order by pname";

                    try{
                        PreparedStatement st=(PreparedStatement)conn.prepareStatement(qy1);
                        st.setString(1,subid);
                        ResultSet rst=st.executeQuery();
                        
                        rst.next();
                        do{
                            String prodname=rst.getString("pname");
                            String prodid=rst.getString("pid");
                            cb3.addItem(prodname+","+prodid);
                        }
                        while(rst.next());
                        
                    }
                    catch(Exception e){
                        JOptionPane.showMessageDialog(rootPane,"cant fetch data 1"+e);
                    }
                }
                catch(Exception e){
                    JOptionPane.showMessageDialog(rootPane,"connectivity error"+e);
                }
//        }
//        else
//        {cb2.setEnabled(false);
//                }
    }//GEN-LAST:event_cb2ItemStateChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
                String path="jdbc:mysql://localhost/";
                String place="shivam";
                String user="root";
                String password="";
                String prname = cb3.getSelectedItem().toString();
                int comma = prname.indexOf(",");
                int l = prname.length();
                String pid = prname.substring(comma + 1, l);
                try{
                    Connection conn=(Connection)DriverManager.getConnection(path+place,user,password);
                    String qy="select price,discount from product where pid=?";
                    try{
                        PreparedStatement st=(PreparedStatement)conn.prepareStatement(qy);
                        st.setString(1,pid);
                        System.out.print(pid);
                        ResultSet rst=st.executeQuery();
                        if(rst.next()){
                            int price=rst.getInt("price");
                            int disc=rst.getInt("discount");
                            int mrp=(price-disc)*(Integer.parseInt(qty.getText()));
                            
                            int comma1=cb3.getSelectedItem().toString().indexOf(",");
                            String pname=cb3.getSelectedItem().toString().substring(0,comma1);
                            int comma2=cb2.getSelectedItem().toString().indexOf(",");
                            String sname=cb2.getSelectedItem().toString().substring(0,comma2);
                            int comma3=cb1.getSelectedItem().toString().indexOf(",");
                            String cname=cb1.getSelectedItem().toString().substring(0,comma3);
                            String scname=cname+","+sname;
                            DefaultTableModel model = (DefaultTableModel) table.getModel();
//                            model.setRowCount(0);
                            model.addRow(new Object[]{pname,scname,qty.getText(),mrp});
                           
                            int rows=model.getRowCount();
                            int total=0;
                            for(int i=0;i<rows;i++){
                            int t=Integer.parseInt(table.getValueAt(i,3).toString());
                            total+=t;
            
                             }
        
        
                            bill.setText(String.valueOf(total));
                        }
                        else
                            JOptionPane.showMessageDialog(rootPane,"cant fetch data");
                    
                    }
                    catch(Exception e){
                        JOptionPane.showMessageDialog(rootPane,"cant fetch data table"+e);
                    }
                }
                catch(Exception e){
                      JOptionPane.showMessageDialog(rootPane,"connection error"+e);
                }
                
//                int comma1=cb3.getSelectedItem().toString().indexOf(",");
//                String pname=cb3.getSelectedItem().toString().substring(0,comma1);
//                int comma2=cb2.getSelectedItem().toString().indexOf(",");
//                String sname=cb2.getSelectedItem().toString().substring(0,comma2);
//                int comma3=cb1.getSelectedItem().toString().indexOf(",");
//                String cname=cb1.getSelectedItem().toString().substring(0,comma3);
//                String scname=cname+","+sname;
//                DefaultTableModel model = (DefaultTableModel) table.getModel();
//                model.addRow(new Object[]{pname,scname,qty.getText(),mrp});
    }//GEN-LAST:event_jButton1ActionPerformed

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
        // TODO add your handling code here:
        clear();
    }//GEN-LAST:event_clearActionPerformed
void clear(){
    buttonGroup1.clearSelection();
        custname.setText("");
        cbd.setSelectedIndex(0);
        dealdate.setDate(null);
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        model.setRowCount(0);
        cb3.setSelectedIndex(0);
        cb2.setSelectedIndex(0);
        cb1.setSelectedIndex(0);
        
        bill.setText("");
        custname.setEnabled(false);
        cbd.setEnabled(false);
        qty.setText("");
        tax.setText("");
        tbill.setText("");
        billno.setText("");
}
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        if(table.getSelectedRow() != -1) {
               // remove selected row from the model
               
//               JOptionPane.showMessageDialog(null, "Selected row deleted successfully");
                String path="jdbc:mysql://localhost/";
                String place="shivam";
                String user="root";
                String password="";
//                String prname = cb3.getSelectedItem().toString();
//                int comma = prname.indexOf(",");
//                int l = prname.length();
//                String pid = prname.substring(comma + 1, l);
                try{
                    Connection conn=(Connection)DriverManager.getConnection(path+place,user,password);
                    String qy="select price,discount from product where pname=?";
                    try{
                        PreparedStatement st=(PreparedStatement)conn.prepareStatement(qy);
                        st.setString(1,table.getValueAt(table.getSelectedRow(),0).toString());
                        ResultSet rst=st.executeQuery();
                        
                        if(rst.next()){
                            int sub=rst.getInt("price");
                            int disc=rst.getInt("discount");
                            int b=Integer.parseInt(bill.getText());
                            int res=(b-((Integer.parseInt(table.getValueAt(table.getSelectedRow(),2).toString()))*(sub-disc)));
                            bill.setText(String.valueOf(res));
                            System.out.print("hello2");
                            DefaultTableModel model = (DefaultTableModel) table.getModel();
                            model.removeRow(table.getSelectedRow());
                        }
                    }
                    catch(Exception e){
                     JOptionPane.showMessageDialog(rootPane,"cant fetch data"+e);   
                    }
                }
                catch(Exception e){
                    JOptionPane.showConfirmDialog(rootPane,"connection error"+e);
                }
            }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
//        DefaultTableModel model = (DefaultTableModel) table.getModel();
//        int rows=model.getRowCount();
//        int total=0;
//        for(int i=0;i<rows;i++){
//            int t=Integer.parseInt(table.getValueAt(i,3).toString());
//            total+=t;
//            
//        }
//        
//        
//        bill.setText(String.valueOf(total));
        if(bill.toString().length()!=0){
            float t1=Float.parseFloat(bill.getText());
            float tax1=0.12f*t1;
            float tbill1=tax1+Float.parseFloat(bill.getText());
            tax.setText(String.valueOf(tax1));
            tbill.setText(String.valueOf(tbill1));
        }
        else
            System.out.print("error");
    }//GEN-LAST:event_jButton2ActionPerformed

    private void sellActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sellActionPerformed
        // TODO add your handling code here:
        if (billno.getText().length()!=0 && custname.getText().length()!=0 && dealdate.getDate()!=null && cb1.getSelectedIndex()!=0 && cb2.getSelectedIndex()!=0 && cb3.getSelectedIndex()!=0 && tbill.getText().length()!=0 && table.getRowCount()!=0){
        String path="jdbc:mysql://localhost/";
                String place="shivam";
                String user="root";
                String password="";
                //info{
                try{
                    Connection conn =(Connection)DriverManager.getConnection(path +place,user,password);
                    String qy1 ="insert into dealinfo(type,custname,dealdate,bill,ps,billno) values(?,?,?,?,?,?)";
                    String qy2="select balance from balance";
                    String qy3="update balance set balance=?";
                    String qy4="select quantity from product where pid=?";
                    String qy5="update product set quantity=?";
                    try{
                        PreparedStatement st=(PreparedStatement)conn.prepareStatement(qy1);
                            
                                if(r1.isSelected()){
                                    String type=r1.getText();
                                    st.setString(1,type);
                                    String name=custname.getText();
                                    st.setString(2,name);
                                }
                                else if(r2.isSelected()){
                                    st.setString(1,r2.getText());
                                    st.setString(2,cbd.getSelectedItem().toString());
                                }
                                SimpleDateFormat sdf=new SimpleDateFormat("yyyy-MM-dd");
                                String date=sdf.format(dealdate.getDate());
                                st.setString(3, date);
//                                System.out.println("hello3");
                                st.setString(4,tbill.getText()); 
//                                System.out.println("hello4");
                                st.setString(5,"sold");
//                                System.out.print("hello5");
                                st.setString(6,billno.getText());
                                int rowcount=st.executeUpdate();
                                if(rowcount==1){
                                JOptionPane.showMessageDialog(rootPane,"deal info updated");
                                }
                    }
                    catch(SQLException e){
                        JOptionPane.showMessageDialog(rootPane,"cant upload data"+e);
                    }
                    try{
                        PreparedStatement st2=(PreparedStatement)conn.prepareStatement(qy2);
                        ResultSet rst=st2.executeQuery();
                        if(rst.next()){
                            int bal=rst.getInt("balance");
                            float amt=Float.parseFloat(tbill.getText());
                            float res=bal+amt;
                        PreparedStatement st3=(PreparedStatement)conn.prepareStatement(qy3);
                        
                        st3.setString(1,String.valueOf(res));
                        int rowcount=st3.executeUpdate();
                        if(rowcount ==1){
                            JOptionPane.showMessageDialog(rootPane,"balance updated");
                        }
                        }
                    }
                    catch(Exception e){
                        JOptionPane.showMessageDialog(rootPane,"error in updating balance"+e);
                    }
//                    try{
//                        PreparedStatement st4=(PreparedStatement)conn.prepareStatement(qy4);
//                        if(cb3.getSelectedIndex()!=0){
//                            int comma=cb3.getSelectedItem().toString().indexOf(",");
//                            String pid=cb3.getSelectedItem().toString().substring(comma+1,cb3.getSelectedItem().toString().length());
//                        
//                        st4.setString(1,pid);
//                        ResultSet rst4=st4.executeQuery();
//                        int qty1=rst4.getInt("quantity");
//                        int qty2=Integer.parseInt(qty.getText());
//                        int resq=qty1+qty2;
//                        PreparedStatement st5=(PreparedStatement)conn.prepareStatement(qy5);
//                        st5.setString(1,String.valueOf(resq));
//                        }
//                        
//                    }
//                    catch(Exception e){
//                        JOptionPane.showMessageDialog(rootPane,"product selection error"+e);
//                    }
                
                }
                catch(Exception e){
                    JOptionPane.showMessageDialog(rootPane,"connectivity error"+e);
                }
                
                   try{
                    Connection conn=(Connection)DriverManager.getConnection(path+place,user,password);
                    String qy="insert into summary values(?,?,?,?,?,?,?)";
                    try{
                        PreparedStatement st=(PreparedStatement)conn.prepareStatement(qy);
                        int rows=table.getRowCount();
                        int i=0;
                        do{
                            st.setString(1,billno.getText());
//                            System.out.println("1");
                            if(r1.isSelected()){
                                st.setString(2,custname.getText());
                            }
                            else if(r2.isSelected()){
                                st.setString(2,cbd.getSelectedItem().toString());
                            }
//                            System.out.println("2");
                            st.setString(3,table.getValueAt(i,0).toString());
//                            System.out.println("3");
                            st.setString(4,table.getValueAt(i,1).toString());
//                            System.out.println("4");
                            st.setString(5,table.getValueAt(i,2).toString());
//                            System.out.println("5");
                            st.setString(6,table.getValueAt(i,3).toString());
//                            System.out.println("6");
                            SimpleDateFormat sdf=new SimpleDateFormat("yyyy-MM-dd");
                                String date=sdf.format(dealdate.getDate());
                            st.setString(7,date);
//                            System.out.println("7");
                            int rowcount = st.executeUpdate();
                            if(rowcount ==1){
                                
                                i++;
                            }
                        }
                        while(i<rows);
                        
                    }
                    catch(Exception e){
                        JOptionPane.showMessageDialog(rootPane,"cant fetch data(summary)"+e);
                    }
                }
                catch(Exception e){
                    JOptionPane.showMessageDialog(rootPane,"connectivity error(summary)"+e);}
        }
     
        else
            JOptionPane.showMessageDialog(rootPane,"please fill all the information ");
    }//GEN-LAST:event_sellActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        double rand=Math.random();
        long r=(long)(rand*1000000000);
        billno.setText(String.valueOf(r));
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        if(billno.getText().length()!=0  && dealdate.getDate()!=null && cb1.getSelectedIndex()!=0 && cb2.getSelectedIndex()!=0 && cb3.getSelectedIndex()!=0 && tbill.getText().length()!=0 && table.getRowCount()!=0){
            print p= new print();
            p.setVisible(true);
            if(r1.isSelected()){
                p.name.setText(this.custname.getText());}
            else{
                p.name.setText(cbd.getSelectedItem().toString());
            }
            p.billno.setText(this.billno.getText());
            p.date.setText(this.dealdate.getDate().toString());
            p.tbill.setText(this.tbill.getText());
            if(purchase.isShowing() && purchase.isEnabled()){
                p.type.setText("purchased");
            }
            else if(sell.isShowing() && sell.isEnabled()){
            p.type.setText("sold");
            }
            int row=this.table.getRowCount();
            int i=0;
            DefaultTableModel mymodel= (DefaultTableModel)p.ptable.getModel();
            
            do{
                String product =this.table.getValueAt(i,0).toString();
                String catsub =this.table.getValueAt(i,1).toString();
                String qty=this.table.getValueAt(i,2).toString();
                String price=this.table.getValueAt(i,3).toString();
                Object rowdata[]={product,catsub,qty,price};
                mymodel.addRow(rowdata);
                i++;
            }
            while(i<row);
        }
        
        
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        model.setRowCount(0);
    }//GEN-LAST:event_jButton6ActionPerformed

    private void r2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_r2ActionPerformed

    private void r1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_r1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(buysell.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(buysell.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(buysell.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(buysell.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new buysell().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField bill;
    private javax.swing.JLabel billno;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel catname;
    private javax.swing.JComboBox<String> cb1;
    private javax.swing.JComboBox<String> cb2;
    private javax.swing.JComboBox<String> cb3;
    public javax.swing.JComboBox<String> cbd;
    private javax.swing.JButton clear;
    private javax.swing.JTextField custname;
    private com.toedter.calendar.JDateChooser dealdate;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel pname;
    public javax.swing.JButton purchase;
    private javax.swing.JTextField qty;
    public javax.swing.JRadioButton r1;
    public javax.swing.JRadioButton r2;
    public javax.swing.JButton sell;
    private javax.swing.JLabel subname;
    private javax.swing.JTable table;
    private javax.swing.JTextField tax;
    private javax.swing.JTextField tbill;
    // End of variables declaration//GEN-END:variables
}
